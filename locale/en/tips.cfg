[pywiki-sections]
title=Pyanodon codex
statistics=[item=iron-gear-wheel] Homepage
fluid-index=[fluid=coal-gas] Fluid index
item-index=[item=coke] Solid fuel values
coalprocessing=Coal Processing
ash=[item=ash] Ash
mechanical-inserter=[item=burner-inserter] Mechanical inserter
assembling-machine=[item=assembling-machine-1] Burner assembling machines
tailings-pond=[item=tailings-pond] Tailings pond
fluid-fuels=[item=glassworks-mk01] Fluid fuels
combustion-mixture=[fluid=combustion-mixture1] Combustion mixture
beacon=[item=beacon] AM:FM Beacons

rawores=Raw ores
big-mines=[item=ore-lead] Big mines

petroleumhandling=Petroleum handling
bitumen-seep=[item=tar-seep-mk01] Bitumen seeps
tholin=[fluid=proto-tholins] Tholins

alternativeenergy=Alternative energy
blimp=[item=aerial-blimp-mk01] Aerial turbines
lfr-stirling=[item=solar-concentrator] Thermosolar 1 and 2
microwave-receiver=[item=microwave-satellite] Microwave receiver

[pywiki-descriptions]
ash=Most inorganic fuels such as [item=coal] now produce [item=ash] when burnt, much like how [item=uranium-fuel-cell] produces [item=used-up-uranium-fuel-cell] on consumption.\n\nAsh management is a central part of the early game, as it will eventually jam machines if not removed from the output slot. [item=burner-inserter] can have a filter set to automatically remove Ash, and [entity=solid-separator] can help to repurpose some of the ash into ores.
mechanical-inserter=The burner inserter is now an [item=burner-inserter]. Unlike in the base game, it does not need to be fueled. It's speed is around 0.6 items per second. It now also functions as a filter inserter, so you can whitelist or blacklist one item.\n\n[item=inserter] also gets a filter slot, has a speed of 1.2 items per second, but still needs electricity.\n[item=long-handed-inserter] moves 1.2 items per second, and is unchanged otherwise.\n[item=fast-inserter] and [item=filter-inserter] move 2.4 items per second, and are unchanged otherwise.
assembling-machine=The assembly machine (now [entity=assembling-machine-1]) now requires fuel. It also has an ingredient limit now: only recipes with at most 3 solid and 1 fluid ingredients can be used by this building. [entity=assembling-machine-2] has a limit of 4 solid ingredients, and [entity=assembling-machine-3] of 5 ingredients, while [entity=automated-factory-mk01] has no ingredient limit.
tailings-pond=The [entity=tailings-pond] has different mechanisms depending on whether you put a gas or a liquid into it.\n\nGasses, such as [fluid=coal-gas], are vented into the atmosphere, which destroys the gas.\n\nLiquids, such as [fluid=tar], are stored, until the tailings pond is full, at which point the pond overflows. This destroys the contents, and puts a ring of highly flammable pollution tiles around the tailings pond. You can remove fluids from the pond again (if it hasn't overflowed) by connecting a pump directly to one of the outputs.
fluid-fuels=Some fluids, such as [fluid=coal-gas] and [fluid=tar] have a fuel value, and so can be burned as fuel in buildings which require fluid fuel to run, such as the [item=glassworks-mk01] and [item=smelter-mk01]. These structures do not require a specific type of fluid fuel, and will accept any fluid with a fuel value as input.\n\nCheck the Fluid index tab for a full list of fluid fuels and their fuel values.
beacon=The [entity=beacon-AM1-FM1] and [entity=diet-beacon-AM1-FM1] use radio signals to trasmit module effects into nearby assembling machines. Each beacon has both an AM and an FM frequency that determines the effect radius, trasmission efficiency, and power usage.\nThe AM and FM frequency sliders range from 1-5.\n\n[entity=diet-beacon-AM1-FM1]\nEffect radius:\n    - AM1: 32\n    - AM2: 24\n    - AM3: 16\n    - AM4: 8\n    - AM5: 2\nTrasmission efficiency: 0.1 * AM * FM\nPower consumption: AM * (FM ^ 3) / 2 MW\n\n[entity=beacon-AM1-FM1]\nEffect radius:\n    - AM1: 64\n    - AM2: 48\n    - AM3: 32\n    - AM4: 16\n    - AM5: 2\nTrasmission efficiency: 0.5 * AM * FM\nPower consumption: AM * (FM ^ 3) MW\n\nThe default 1AM 1FM beacon is wide area low power.\nIf two beacons have the same AM:FM frequencies, the signals will interfere and cancel each other out.\nBeacons do not accept productivity modules such as [item=productivity-module-3].
combustion-mixture=You can burn [fluid=combustion-mixture1] in [entity=gasturbinemk01] for electricity. Higher temperatures of the fluid mean that the turbine works at a higher efficiency, thus generating more power. [entity=gasturbinemk01] has a limit to the temperature it can accept: if you give it a higher temperature input than this limit, it will be capped to that temperature, so you will be wasting the input. Higher level turbines have higher limits.

big-mines=For most ores, both standard ore patches like [entity=ore-lead] and large rocks like [entity=lead-rock] will spawn. The latter are so large, you need to build a big mine such as [entity=lead-mine]. These big mines will require canned fuels inside an [item=empty-fuel-canister].\n\nMost mines are unlocked with [technology=big-mines].\nThe earliest available big mine is the [entity=salt-mine] at [technology=energy-1].

bitumen-seep=[entity=bitumen-seep] can spawn on the map. These mark underground hydrocarbon deposits. You can build one of [entity=bitumen-seep-mk01], [entity=tar-seep-mk01] or [entity=natural-gas-seep-mk01] over these.\n\nYou first have to feed these buildings with a drilling fluid, like [fluid=drilling-fluid-0]. The building does not produce anything at this point, since you're drilling for resources. Eventually, you will reach the underground deposit, and the building will stop needing drilling fluids, but instead yield [fluid=crude-oil], [fluid=tar] or [fluid=raw-gas], respectively, depending on the type of building you built.\n\nThe amount of resource spawned depends on:\n - The level of drilling fluid D (between 1 and 4).\n - The level of the building B (between 1 and 4).\n - A random number R between 1 and 4.\n\nThe number of drill cycles is then 640000 * D * B * R.\n\nEvery drilling cycle results in 100 of the desired fluid. The speed of the building determines the number of drilling cycles per second.
tholin=Nauvis' atmosphere is rich in tholins, which can be used to craft a variety of gases. In order to create [fluid=tholins], you need to launch a [item=capsule] with a rocket using a [entity=rocket-silo]. It will gather up the tholins present in the atmosphere for you to use.\n\nTholins can be processed into several useful gasses:\n\n[technology=tholin-mk01]:\n[fluid=carbon-dioxide] [fluid=nitrogen] [fluid=hydrogen]\n\n[technology=tholin-mk02]:\n[fluid=chlorine] [fluid=acetylene] [fluid=acidgas] [fluid=ammonia] [fluid=carbon-dioxide] [fluid=benzene]\n\n[technology=tholin-mk03]:\n[fluid=cyanic-acid] [fluid=carbon-dioxide] [fluid=ethylene] [fluid=methane] [fluid=syngas] [fluid=acetone]\n[fluid=methanal] [fluid=methanol] [fluid=propene] [fluid=refsyngas]\n\n[technology=tholin-mk04]:\n[fluid=deuterium] [fluid=glycerol] [fluid=helium3] [fluid=olefin]

blimp=Place down at least two [entity=aerial-base] far away from each other, and then make an [entity=aerial-blimp-mk01]. You can give the aerial turbine a path between the discharging bases just like you would with trains - select 'store energy' in the menu.\n\nIt will then follow this path. While flying, it will gather wind energy from the air, and when it reaches a base, it will discharge this energy. The bases have a large energy buffer to average out the energy gain over time. You can click on the aerial turbines to see their accumulated energy.
lfr-stirling=[entity=lrf-panel-mk01] and [entity=stirling-concentrator] both use sunlight to warm up [fluid=molten-salt] during the day. The higher-temperature molten salt can then be used to generate electricity via [entity=lrf-building-mk01] and [entity=solar-concentrator]. Adding more panels or concentrators will increase the speed at which the salt is warmed, and therefore the speed at which the power plant will be able to operate. The [entity=lrf-panel-mk01] adds 600kW of heat to the molten salt stored inside of it, and the [entity=stirling-concentrator] does the same at 800kW of heat. Note that it can take a while for the salt to warm up initially.\n\nThe temperature of the molten salt does not automatically equalize between entities. Instead you must continuously pump the cold salt into the hot salt. The other panels contribute to the heating of the salt that goes into the power plant, even though it may take a while for the system to reach a steady state.
microwave-receiver=[entity=microwave-receiver] allows the transfer of solar energy from [item=microwave-satellite] in orbit.\n\nEach [item=microwave-satellite] can beam down up to 4.8MW of energy. In order to get the satellite into orbit, launch it into space with a [entity=rocket-silo]. The [entity=rocket-silo] has room for up to 4 satellites per launch.\n\n[entity=microwave-receiver] can support up to 15 satellites for a total of 72MW.

[pywiki-statistics]
info=Welcome to the Pyanodon Codex. This book contains helpful information to your success in pY mods.
info-2=Certain pages are interactive and can influence the efficiency of your factory.
info-3=[font=default-semibold][color=255,230,192]Join the official pY Discord: [/color][/font]
info-4=[font=default-semibold][color=255,230,192]Support Pyanodon: [/color][/font]
playtime=[font=default-semibold][color=255,230,192]Playtime: [/color][/font]__1__:__2__:__3__
time-of-day=[font=default-semibold][color=255,230,192]Time of day: [/color][/font]__1__:__2__ __3__
mods-installed=[font=default-semibold][color=255,230,192]Mods installed: [/color][/font]__1__
buildings-placed=[font=default-semibold][color=255,230,192]Buildings placed: [/color][/font]__1__
recipes-unlocked=[font=default-semibold][color=255,230,192]Recipes unlocked: [/color][/font]__1__
science-produced=[font=default-semibold][color=255,230,192]Science produced: [/color][/font]__1__
creatures-slaughtered=[font=default-semibold][color=255,230,192]Creatures slaughtered: [/color][/font]__1__
items-produced=[font=default-semibold][color=255,230,192]Items produced: [/color][/font]__1__
items-consumed=[font=default-semibold][color=255,230,192]Items consumed: [/color][/font]__1__
fluids-produced=[font=default-semibold][color=255,230,192]Fluids produced: [/color][/font]__1__
fluids-consumed=[font=default-semibold][color=255,230,192]Fluids consumed: [/color][/font]__1__
evolution=[font=default-semibold][color=255,230,192]Evolution factor: [/color][/font]__1__%\n[font=default-semibold][color=255,230,192]By pollution: [/color][/font]+__2__\n[font=default-semibold][color=255,230,192]By spawner kills: [/color][/font]+__3__\n[font=default-semibold][color=255,230,192]By time: [/color][/font]+__4__
pollution=[font=default-semibold][color=255,230,192]Pollution produced: [/color][/font]__1__
rockets-launched=[font=default-semibold][color=255,230,192]Rockets launched: [/color][/font]__1__
trains=[font=default-semibold][color=255,230,192]Trains: [/color][/font]__1__
caravans=[font=default-semibold][color=255,230,192]Caravans: [/color][/font]__1__
tech-tree-completion=[font=default-semibold][color=255,230,192]Tech tree completion: [/color][/font]__1__%
kills=[font=default-semibold][color=255,230,192]Kills: [/color][/font]__1__
losses=[font=default-semibold][color=255,230,192]Losses: [/color][/font]__1__

[pywiki-spreadsheets]
localised-name=Name
voidable=Voidable in
fuel-category=Fuel category
fuel-value=Fuel value
unlocked-at=Unlocked at
burnt-result=Burnt result
color=Color